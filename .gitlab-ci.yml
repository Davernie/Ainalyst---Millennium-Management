image: python:3.12

stages:
  - setting_up
  - pep8_linter
  - ast_parser
  - test_scripts

setup:
  stage: setting_up
  tags:
    - docker
  script:
    - python --version
    - pip --version
    - python -m venv venv  # Create a virtual environment 
    - source venv/bin/activate # So requirements can be used across diff jobs
    - pip install --upgrade pip ruff flake8  # Install requirements
  cache:
    key: requirements    #cache/store dependencies
    paths:
      - venv/
  artifacts:
    paths:
      - venv/
    expire_in: 1 week

lint_code:
  stage: pep8_linter
  tags:
    - docker
  script:
    - source venv/bin/activate  # 'retrieve' the dependencies
    - echo "Running PEP8 checks"
    - ruff check backend/ast_parser/fileForTesting.py > ruff_report.txt || true  #Proceed regardless
  artifacts:
    paths:
      - ruff_report.txt
    expire_in: 1 week

ast_parsing:
  stage: ast_parser
  tags:
    - docker
  script:
    - source venv/bin/activate
    - echo "Running AST Parser"
    - python backend/ast_parser/astParser.py > ast_output.txt || true #Force true
  artifacts:
    paths:
      - ast_output.txt
    expire_in: 1 week

run_python_script:
  stage: test_scripts
  tags:
    - docker
  script:
    - source venv/bin/activate
    - export PYTHONPATH=$(pwd)
    - echo "Running custom Python script"
    - pip install litellm
    - python backend/app/scripts/run_scripts.py --filePath backend/app/scripts/fileForTesting.py > scripts_output.txt
  artifacts:
    paths:
      - script_output.txt
    expire_in: 1 week


